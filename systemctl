#!/bin/bash
# QuasarFoks systemd-rc (systemctl)
# GNU/GPLv2
# бесмыслено но пусть будет


# systemctl reboot
sysreboot() {
    reboot
}

# systemctl poweroff
syspoweroff() {
    poweroff
}

# systemctl halt
syshalt() {
    halt
}

#systemctl list-units
syslist() {
    rc-service -l
}

#systemctl reload
reload_service() {
    local service_name="$1"
    rc-service "$service_name" reload
}

#systemctl enable
enable_service() {
    local service_name="$1"
    rc-update add "$service_name" default
}

#systemctl disable
disable_service() {
    local service_name="$1"
    rc-update del "$service_name" default
}

#systemctl start
start_service() {
    local service_name="$1"
    rc-service "$service_name" start
}

#systemctl stop
stop_service() {
    local service_name="$1"
    rc-service "$service_name" stop
}

#systemctl restart
restart_service() {
    local service_name="$1"
    rc-service "$service_name" restart
}

#systemctl status
status_service() {
    local service_name="$1"
    rc-service "$service_name" status
}

case "$1" in
    reboot)
        shift
        sysreboot
        ;;
    poweroff)
        shift
        syspoweroff
        ;;
    halt)
        shift
        syshalt
        ;;
    list-units)
        shift
        syslist
        ;;
    reload)
        shift
        reload_service "$1"
        ;;
    enable)
        shift
        enable_service "$1"
        ;;
    disable)
        shift
        disable_service "$1"
        ;;
    start)
        shift
        start_service "$1"
        ;;
    stop)
        shift
        stop_service "$1"
        ;;
    restart)
        shift
        restart_service "$1"
        ;;
    status)
        shift
        status_service "$1"
        ;;
    *)
        echo "Usage: systemctl {enable|disable|start|stop|restart|status|reload} <service_name>"
        echo "Usage: systemctl {list-units|poweroff|reboot|halt}"
        exit 1
        ;;
esac
